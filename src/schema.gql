# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Role {
  id: Int!
  name: String!
}

type Course {
  id: Int!
  name: String!
  startDate: DateTime!
  endDate: DateTime!
  form: Int!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Lesson {
  id: String!
  startTime: DateTime!
  endTime: DateTime!
  subjectId: Int!
  location: String!
  teacherId: String!
  subject: Subject!
  teacher: User!
}

type Grade {
  studentId: String!
  lessonId: String!
  value: Int!
  student: Student!
  lesson: Lesson!
}

type Student {
  studentId: String!
  userId: String!
  name: String!
  surname: String!
  patronymic: String
  email: String!
  subgroup: Boolean!
  isLeader: Boolean!
  isMarking: Boolean!
  group: Group!
  absences: [Absence!]!
  grades: [Grade!]!
}

type Absence {
  studentId: String!
  lessonId: String!
  hours: Int!
  student: Student!
  lesson: Lesson!
}

type Schedule {
  week: Int!
  groupId: Int!
  teacherId: String!
  lessons: [Lesson!]!
}

type Group {
  id: Int!
  number: String!
  form: Int!
  students: [Student!]!
  subjects: [Subject!]!
  schedule(week: Int!): Schedule!
  absences(week: Int!): [Absence!]!
}

type Type {
  id: Int!
  name: String!
}

type Subject {
  id: Int!
  courseId: Int!
  typeId: Int!
  teacherId: String!
  recurrence: String!
  course: Course!
  teacher: User!
  type: Type!
  groups: [Group!]!
  lessons: [Lesson!]!
}

type User {
  id: String!
  name: String!
  surname: String!
  patronymic: String
  email: String!
  roleId: Int!
  role: Role!
  subjects: [Subject!]!
}

type LoginUserData {
  id: String!
  name: String!
  surname: String!
  patronymic: String
  role: String!
}

type LoginResponse {
  accessToken: String!
  user: LoginUserData!
}

type Query {
  groups: [Group!]!
  group(id: Int!): Group!
  groupSchedule(week: Int!, groupId: Int!): Schedule!
  teacherSchedule(week: Int!, teacherId: String!): Schedule!
  lessons: [Lesson!]!
  lesson(id: String!): Lesson!
  users: [User!]!
  user(id: String!): User!
  roles: [Role!]!
  role(id: Int!): Role!
  subjects: [Subject!]!
  subject(id: Int!): Subject!
  types: [Type!]!
  type(id: Int!): Type!
  courses: [Course!]!
  course(id: Int!): Course!
  absences: [Absence!]!
  absence(studentId: String!, lessonId: String!): Absence!
  students: [Student!]!
  student(id: String!): Student!
  studentByUser(id: String!): Student!
  grades: [Grade!]!
  grade(studentId: String!, lessonId: String!): Grade!
}

type Mutation {
  createGroup(createGroupInput: CreateGroupInput!): Group!
  updateGroup(updateGroupInput: UpdateGroupInput!): Group!
  removeGroup(id: Int!): Group!
  createUser(createUserInput: CreateUserInput!): User!
  updateUser(updateUserInput: UpdateUserInput!): User!
  removeUser(id: String!): User!
  createSubject(createSubjectInput: CreateSubjectInput!): Subject!
  updateSubject(updateSubjectInput: UpdateSubjectInput!): Subject!
  addGroup(subjectId: Int!, groupId: Int!): Subject!
  removeSubject(id: Int!): Subject!
  createCourse(createCourseInput: CreateCourseInput!): Course!
  updateCourse(updateCourseInput: UpdateCourseInput!): Course!
  removeCourse(id: Int!): Course!
  createAbsence(createAbsenceInput: CreateAbsenceInput!): Absence!
  removeAbsence(studentId: String!, lessonId: String!): Absence!
  createStudent(createStudentInput: CreateStudentInput!): Student!
  updateStudent(updateStudentInput: UpdateStudentInput!): Student!
  removeStudent(id: String!): Student!
  createGrade(createGradeInput: CreateGradeInput!): Grade!
  updateGrade(updateGradeInput: UpdateGradeInput!): Grade!
  removeGrade(studentId: String!, lessonId: String!): Grade!
  login(loginUserInput: LoginUserInput!): LoginResponse!
  logout: LoginUserData!
  refresh: LoginResponse!
}

input CreateGroupInput {
  number: String!
  form: Int!
}

input UpdateGroupInput {
  number: String
  form: Int
  id: Int!
}

input CreateUserInput {
  name: String!
  surname: String!
  patronymic: String
  email: String!
  roleId: Int!
}

input UpdateUserInput {
  name: String
  surname: String
  patronymic: String
  email: String
  roleId: Int
  id: String!
}

input CreateSubjectInput {
  courseId: Int!
  typeId: Int!
  teacherId: String!
  recurrence: String!
}

input UpdateSubjectInput {
  courseId: Int
  typeId: Int
  teacherId: String
  recurrence: String
  id: Int!
}

input CreateCourseInput {
  name: String!
  startDate: DateTime!
  endDate: DateTime!
  form: Int!
}

input UpdateCourseInput {
  name: String
  startDate: DateTime
  endDate: DateTime
  form: Int
  id: Int!
}

input CreateAbsenceInput {
  studentId: String!
  lessonId: String!
}

input CreateStudentInput {
  name: String!
  surname: String!
  patronymic: String
  email: String!
  groupId: Int!
  subgroup: Boolean!
  isLeader: Boolean!
  isMarking: Boolean!
}

input UpdateStudentInput {
  name: String
  surname: String
  patronymic: String
  email: String
  groupId: Int
  subgroup: Boolean
  isLeader: Boolean
  isMarking: Boolean
  studentId: String!
}

input CreateGradeInput {
  studentId: String!
  lessonId: String!
  value: Int!
}

input UpdateGradeInput {
  studentId: String!
  lessonId: String!
  value: Int
}

input LoginUserInput {
  email: String!
  password: String!
}